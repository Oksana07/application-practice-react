{"version":3,"sources":["conponents/MainInfo/MainInfo.jsx","conponents/StatisticsBtns/StatisticsBtns.jsx","conponents/_pages/MainPage.jsx","conponents/_share/GoBackHeader/GoBackHeader.jsx","conponents/_share/LabelInput/LabelInput.jsx","conponents/_share/Form/Form.jsx","conponents/_pages/TransactionPage.jsx","conponents/_pages/BalancePage.jsx","conponents/App/App.jsx","index.js"],"names":["MainInfo","title","currency","options","handleOpenPage","activePage","map","namePeriod","titlePeriod","sum","onClick","type","StatisticsBtns","MainPage","mainInfoCosts","mainInfoIncomes","mainInfoBalance","GoBackHeader","cbGoBack","LabelInput","name","value","placeholder","cbOnChange","onChange","Form","cbOnSubmit","handleChange","formOpts","formValues","btnTitle","onSubmit","e","preventDefault","TransactionPage","transType","addTransaction","handeleClosePage","useState","date","time","category","comment","form","setForm","transaction","id","shortid","generate","target","prevForm","tratnsactionFormOption","BalancePage","App","setActivePage","setCosts","setIncomes","prevCosts","prevIncomes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1bb3139.chunk.js","sourcesContent":["const MainInfo = ({\r\n    title,\r\n    currency = \"USD\",\r\n    options,\r\n    handleOpenPage,\r\n    activePage,\r\n  }) => {\r\n    return (\r\n      <section>\r\n        <h2>{title}</h2>\r\n        <p>{currency}</p>\r\n        <ul>\r\n          {options.map(({ namePeriod, titlePeriod, sum }) => (\r\n            <li key={namePeriod}>\r\n              <span>{titlePeriod}</span>\r\n              <span>{sum}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={() => handleOpenPage(activePage)} type=\"button\">\r\n          Add\r\n        </button>\r\n      </section>\r\n    );\r\n  };\r\n  \r\n  export default MainInfo;","const StatisticsBtns = () => {\r\n    return (\r\n        <>\r\n        <button type='button'>Все расходи</button>\r\n        <button type='button'>Все доходи</button> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatisticsBtns;","import MainInfo from \"../MainInfo/MainInfo\";\r\nimport StatisticsBtns from '../StatisticsBtns/StatisticsBtns';\r\nimport {mainInfoCosts,\r\n        mainInfoIncomes,\r\n        mainInfoBalance\r\n        } from '../../assets/data/mainInfoOptions.json';\r\n\r\n\r\nconst MainPage = ({handleOpenPage}) =>{\r\n    return (\r\n<section>\r\n    <h1>Журнал росходов</h1>\r\n    <MainInfo \r\n    title={\"Расходи\"} \r\n    options={mainInfoCosts} \r\n    activePage='costs'\r\n    handleOpenPage={handleOpenPage}\r\n    />\r\n    <MainInfo \r\n    title={\"Доходи\"} \r\n    options={mainInfoIncomes} \r\n    activePage='incomes'\r\n    handleOpenPage={handleOpenPage}\r\n    />\r\n    <MainInfo \r\n    title={\"Баланс\"} \r\n    options={mainInfoBalance} \r\n    activePage='balance'\r\n    handleOpenPage={handleOpenPage}\r\n    />\r\n    <StatisticsBtns />\r\n</section>\r\n\r\n    );\r\n    \r\n};\r\n\r\nexport default MainPage;","const GoBackHeader = ({ title, cbGoBack }) => {\r\n    return (\r\n      <header>\r\n        <button type=\"button\" onClick={cbGoBack}>\r\n          GoBack\r\n        </button>\r\n        <h1>{title}</h1>\r\n      </header>\r\n    );\r\n  };\r\n  \r\n  export default GoBackHeader;","const LabelInput = ({\r\n    title, \r\n    type=\"text\",\r\n    name, \r\n    value, \r\n    placeholder = null, \r\n    cbOnChange,\r\n}) => {\r\n    return (\r\n        <label>\r\n        {title && <p>{title}</p>}\r\n        <input \r\n        type={type} \r\n        name={name} \r\n        value={value} \r\n        onChange={cbOnChange} \r\n        placeholder={placeholder}\r\n        />\r\n    </label>\r\n    );\r\n};\r\n\r\nexport default LabelInput;","import LabelInput from \"../LabelInput/LabelInput\";\r\n\r\nconst Form = ({\r\n    cbOnSubmit, \r\n    handleChange, \r\n    formOpts, \r\n    formValues, \r\n    btnTitle\r\n}) => {\r\n    const handeleSubmit = (e) => {\r\n        e.preventDefault();\r\n        cbOnSubmit();\r\n    }\r\n    return (\r\n        <form onSubmit={handeleSubmit}>\r\n            <button type='submit'>{btnTitle}</button>\r\n            {formOpts.map(({type, title, name, placeholder }) => (\r\n                <LabelInput\r\n                type={type}\r\n                title= {title}\r\n                name={name}\r\n                value={formValues[name]}\r\n                placeholder={placeholder}\r\n                cbOnChange={handleChange}\r\n                    />\r\n            ))}        \r\n         </form>   \r\n        );\r\n    };\r\n\r\nexport default Form;","import { useState } from 'react';\r\nimport GoBackHeader from '../_share/GoBackHeader/GoBackHeader';\r\nimport shortid from 'shortid';\r\nimport Form from '../_share/Form/Form';\r\nimport tratnsactionFormOption from '../../assets/data/options/tratnsactionFormOption.json';\r\n\r\n\r\n\r\nconst TransactionPage = ({transType, addTransaction, handeleClosePage}) => {\r\n    const [form, setForm] = useState({\r\n        date:\"\",\r\n         time:\"\",\r\n         category: transType === \"incomes\" ? \"Зарплата\" : \"Еда\",\r\n         sum:\"\",\r\n        currency:\"USD\",\r\n        comment:\"\",\r\n    })\r\n\r\n    const handleChange = (e)=> {\r\n        const {name, value}=e.target;\r\n        setForm(prevForm => ({...prevForm, [name]: value}))\r\n    };\r\n\r\n    const handeleSubmit=e=>{\r\n            addTransaction({\r\n            transType, \r\n            transaction: {...form, id: shortid.generate()},\r\n        });\r\n        handeleClosePage();\r\n    };\r\n\r\n        const {date,time,category,sum,currency,comment}=form;\r\n        return (\r\n            <section> \r\n            <GoBackHeader \r\n            title={transType === \"costs\" ? \"Расход\" : \"Доходы\"}\r\n            cbGoBack={handeleClosePage}\r\n            />\r\n             <Form\r\n            cbOnSubmit={handeleSubmit} \r\n            handleChange={handleChange} \r\n            formOpts={tratnsactionFormOption} \r\n            formValues={form}\r\n            btnTitle={\"Ok\"}\r\n             />          \r\n             </section>\r\n        ); \r\n     } \r\n       \r\n  \r\n\r\nexport default TransactionPage;","const BalancePage = () => {\r\n    return <h1>BalancePage</h1>\r\n};\r\n\r\nexport default BalancePage;","import { useState } from \"react\";\nimport MainPage from \"../_pages/MainPage\";\nimport TransationPage from \"../_pages/TransactionPage\";\nimport BalancePage from \"../_pages/BalancePage\";\n\nconst App = () => {\n// state = {\nconst [activePage, setActivePage]= useState(\"\");\nconst [costs, setCosts]= useState([]);\nconst [incomes, setIncomes]= useState([]);\n\nconst handleOpenPage = (activePage) => setActivePage(activePage);\n\nconst handeleClosePage = ()=> setActivePage(\"\");\n\nconst addTransaction =({transType, transaction})=>{\n  transType === \"costs\" && \n  setCosts (prevCosts => [...prevCosts, transaction]);\n  transType === \"costs\" && \n  setIncomes (prevIncomes => [...prevIncomes, transaction]);\n };\n \n\nswitch(activePage) {\n  case \"costs\":\n  return (\n  <TransationPage  \n  transType={activePage} \n  handeleClosePage= {handeleClosePage} \n  addTransaction={addTransaction}\n  />\n  );\n  case \"incomes\":\n  return (\n  <TransationPage\n   transType={activePage} \n   handeleClosePage={handeleClosePage}\n   addTransaction={addTransaction}\n   />\n  );\n  case \"balance\":\n  return <BalancePage />;\n  default:\n    return <MainPage \n    handleOpenPage ={handleOpenPage}\n    />\n    }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./conponents/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}