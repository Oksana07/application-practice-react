{"version":3,"sources":["conponents/MainInfo/MainInfo.jsx","conponents/StatisticsBtns/StatisticsBtns.jsx","conponents/_pages/MainPage.jsx","conponents/_share/GoBackHeader/GoBackHeader.jsx","conponents/_share/LabelInput/LabelInput.jsx","conponents/_pages/TransactionPage.jsx","conponents/App/App.jsx","index.js"],"names":["MainInfo","title","currency","options","handleOpenPage","activePage","map","namePeriod","titlePeriod","sum","onClick","type","StatisticsBtns","MainPage","mainInfoCosts","mainInfoIncomes","mainInfoBalance","GoBackHeader","cbGoBack","LabelInput","name","value","placeholder","cbOnChange","onChange","TransationPage","state","date","time","category","comment","handleChange","e","target","setState","handeleSubmit","preventDefault","props","transType","addTransaction","handeleClosePage","transaction","id","shortid","generate","this","onSubmit","Component","App","costs","incomes","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c93a2a.chunk.js","sourcesContent":["const MainInfo = ({\r\n    title,\r\n    currency = \"USD\",\r\n    options,\r\n    handleOpenPage,\r\n    activePage,\r\n  }) => {\r\n    return (\r\n      <section>\r\n        <h2>{title}</h2>\r\n        <p>{currency}</p>\r\n        <ul>\r\n          {options.map(({ namePeriod, titlePeriod, sum }) => (\r\n            <li key={namePeriod}>\r\n              <span>{titlePeriod}</span>\r\n              <span>{sum}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={() => handleOpenPage(activePage)} type=\"button\">\r\n          Add\r\n        </button>\r\n      </section>\r\n    );\r\n  };\r\n  \r\n  export default MainInfo;","const StatisticsBtns = () => {\r\n    return (\r\n        <>\r\n        <button type='button'>Все расходи</button>\r\n        <button type='button'>Все доходи</button> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatisticsBtns;","import MainInfo from \"../MainInfo/MainInfo\";\r\nimport StatisticsBtns from '../StatisticsBtns/StatisticsBtns';\r\nimport {mainInfoCosts,\r\n        mainInfoIncomes,\r\n        mainInfoBalance\r\n        } from '../../assets/data/mainInfoOptions.json';\r\n\r\n\r\nconst MainPage = ({handleOpenPage}) =>{\r\n    return (\r\n<section>\r\n    <h1>Журнал росходов</h1>\r\n    <MainInfo \r\n    title={\"Расходи\"} \r\n    options={mainInfoCosts} \r\n    activePage='costs'\r\n    handleOpenPage={handleOpenPage}\r\n    />\r\n    <MainInfo \r\n    title={\"Доходи\"} \r\n    options={mainInfoIncomes} \r\n    activePage='incomes'\r\n    handleOpenPage={handleOpenPage}\r\n    />\r\n    <MainInfo \r\n    title={\"Баланс\"} \r\n    options={mainInfoBalance} \r\n    activePage='balance'\r\n    handleOpenPage={handleOpenPage}\r\n    />\r\n    <StatisticsBtns />\r\n</section>\r\n\r\n    );\r\n    \r\n};\r\n\r\nexport default MainPage;","const GoBackHeader = ({ title, cbGoBack }) => {\r\n    return (\r\n      <header>\r\n        <button type=\"button\" onClick={cbGoBack}>\r\n          GoBack\r\n        </button>\r\n        <h1>{title}</h1>\r\n      </header>\r\n    );\r\n  };\r\n  \r\n  export default GoBackHeader;","const LabelInput = ({\r\n    title, \r\n    type=\"text\",\r\n    name, \r\n    value, \r\n    placeholder = null, \r\n    cbOnChange,\r\n}) => {\r\n    return (\r\n        <label>\r\n        {title && <p>{title}</p>}\r\n        <input \r\n        type={type} \r\n        name={name} \r\n        value={value} \r\n        onChange={cbOnChange} \r\n        placeholder={placeholder}\r\n        />\r\n    </label>\r\n    );\r\n};\r\n\r\nexport default LabelInput;","import { Component } from 'react';\r\nimport GoBackHeader from '../_share/GoBackHeader/GoBackHeader';\r\nimport LabelInput from '../_share/LabelInput/LabelInput';\r\nimport shortid from 'shortid';\r\n\r\n\r\n\r\nclass TransationPage extends Component {\r\n    state={\r\n        date:\"\",\r\n        time:\"\",\r\n        category:\"Еда\",\r\n        sum:\"\",\r\n        currency:\"USD\",\r\n        comment:\"\",\r\n    };\r\n\r\n    handleChange = (e)=>{\r\n        const {name, value}=e.target;\r\n        this.setState({ [name]: value});\r\n    };\r\n\r\n    handeleSubmit=e=>{\r\n        e.preventDefault()\r\n        const{transType, addTransaction, handeleClosePage}=this.props;\r\n            addTransaction({\r\n            transType, \r\n            transaction: {...this.state, id: shortid.generate()},\r\n        });\r\n        handeleClosePage();\r\n    };\r\n\r\n    render (){\r\n        const {date,time,category,sum,currency,comment}=this.state;\r\n        const {handeleClosePage, transType}=this.props;\r\n        return (\r\n            <section>\r\n            <GoBackHeader \r\n            title={transType === \"costs\" ? \"Расход\" : \"Доходы\"}\r\n            cbGoBack={handeleClosePage}\r\n            /> \r\n            <form onSubmit={this.handeleSubmit}>\r\n            <button type='submit'>Ok</button>\r\n               <LabelInput\r\n               type='date'\r\n               title= 'День'\r\n               name='date'\r\n               value={date}\r\n               cbOnChange={this.handleChange}\r\n               />\r\n               <LabelInput\r\n               type=\"time\"\r\n               title= \"Время\"\r\n               name=\"date\"\r\n               value = {time}\r\n               cbOnChange={this.handleChange}\r\n               />\r\n               <LabelInput\r\n               type=\"button\"\r\n               title= \"Категорія\"\r\n               name=\"categoty\"\r\n               value={category}\r\n            //    cbOnChange={()=>{}}\r\n               />\r\n               <LabelInput\r\n               title= \"Сума\"\r\n               name=\"sum\"\r\n               value={sum}\r\n               placeholder= \"Введіть суму\"\r\n               cbOnChange={this.handleChange}\r\n               />\r\n               <LabelInput\r\n               type=\"button\"\r\n               title= \"Валюта\"\r\n               name=\"currency\"\r\n               value={currency}\r\n            //    cbOnChange={()=>{}}\r\n               />\r\n               <LabelInput\r\n               name=\"comment\"\r\n               value={comment}\r\n                placeholder= \"Коментар\"\r\n               cbOnChange={this.handleChange}\r\n               />\r\n                </form>   \r\n            </section>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default TransationPage;","import { Component } from \"react\";\nimport MainPage from \"../_pages/MainPage\";\nimport TransationPage from \"../_pages/TransactionPage\";\nimport BalancePage from \"../_pages/BalancePage\";\n\nclass App extends Component {\nstate = {\n  activePage: \"\", \n  costs:[],\n  incomes:[],\n };\n\n handleOpenPage = (activePage) => {\n   this.setState({activePage});\n };\n\n handeleClosePage = ()=> this.setState({activePage: \"\"}) ;\n\n addTransaction =({transType, transaction})=>{\n   this.setState(prevState =>({[transType]:[...prevState[transType], transaction]\n  }));\n };\n \n  render () {\n    const {activePage} = this.state;\n    switch(activePage) {\n  case \"costs\":\n  return (\n  <TransationPage  \n  transType={activePage} \n  handeleClosePage= {this.handeleClosePage} \n  addTransaction={this.addTransaction}\n  />\n  );\n  case \"incomes\":\n  return (\n  <TransationPage\n   transType={activePage} \n   handeleClosePage={this.handeleClosePage}\n   addTransaction={this.addTransaction}\n   />\n  );\n  case \"balance\":\n  return \n  <BalancePage />;\n  default:\n    return (\n    <MainPage \n    handleOpenPage ={this.handleOpenPage}\n    />\n    );\n    }\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./conponents/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}